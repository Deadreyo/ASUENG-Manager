import React, { useState } from "react"
import ProjectObject from "renderer/utilities/ProjectObjectInterface"

const containerStyle: React.CSSProperties = {
  backgroundColor: "#0c0d0e",
  color: "rgb(252, 253, 254)",
  letterSpacing: "0.5px",
  height: "100%",
  overflowY: "auto",
  maxHeight: "60vh",
}

const innerContainersStyle: React.CSSProperties = {
  paddingLeft: "20px",
  borderLeft: "2px solid grey",

}

export default function JsonCustomRender({src}: {src: ProjectObject}) {

    const convert = (object: ProjectObject) =>{
      // console.log(object.children)
      const [display, setDisplay] = useState("initial");
      let childrenElements = object.children? Array.isArray(object.children)?
        <div style={{...innerContainersStyle, display: display}}>

            {object.children.map( (obj, ind) => (
            convert(obj)
            ))}
        </div>
       :
      <div key={0} style={{...innerContainersStyle, display: "none"}}>
        {console.log("next:")}
        {console.log(object.children)}
        {convert(object.children)}
      </div>
       : null;

      const hideChildren = (child) => {
        setDisplay("nonezh")
      }

      return (
        <div>
          {object.children? <span><i className="fas fa-folder" onClick={() => hideChildren(childrenElements)}></i> name : {object.name}</span> : <span><i className="fa-solid fa-folder-open"></i> name : {object.name}</span>}
          {childrenElements}
        </div>
      )
    }

    console.log(src)

    let elementArray = []


    return(
        <div style={containerStyle}>
          {convert(src)}
        </div>
    )
}

















































































































































































































































































































































































































































































































































































































































































